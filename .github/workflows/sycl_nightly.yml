name: SYCL Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'
  pull_request:
    paths:
      - 'devops/containers/ubuntu2204_preinstalled.Dockerfile'
      - '.github/workflows/sycl_nightly.yml'
  push:

jobs:
  test_matrix:
    if: github.repository == 'intel/llvm'
    name: Generate Test Matrix
    uses: ./.github/workflows/sycl_gen_test_matrix.yml
    with:
      lts_config: "ocl_gen9;ocl_x64"

  ubuntu2204_build_test:
    if: github.repository == 'intel/llvm'
    uses: ./.github/workflows/sycl_linux_build_and_test.yml
    needs: test_matrix
    secrets: inherit
    with:
      build_cache_root: "/__w/"
      build_artifact_suffix: default-2204
      build_configure_extra_args: '--hip --cuda --enable-esimd-emulator'
      # We use the build for the release, override its name and prefer
      # widespread gzip compression.
      artifact_archive_name: sycl_linux.tar.gz
      artifact_compress_command: gzip
      artifact_decompress_command: gunzip
      check_filters: '[]'

  ubuntu2204_opaque_pointers_build_test:
    if: github.repository == 'intel/llvm' && !always()
    uses: ./.github/workflows/sycl_linux_build_and_test.yml
    needs: test_matrix
    secrets: inherit
    with:
      build_cache_root: "/__w/"
      build_cache_suffix: opaque_pointers
      build_artifact_suffix: opaque_pointers-2204
      build_configure_extra_args: "--hip --cuda --enable-esimd-emulator --cmake-opt=-DSPIRV_ENABLE_OPAQUE_POINTERS=TRUE"

  windows_default:
    name: Windows
    if: github.repository == 'intel/llvm'
    uses: ./.github/workflows/sycl_windows_build_and_test.yml
    with:
      check_filters: '[]'
      # We use the build for the release, override its name.
      artifact_archive_name: sycl_windows.tar.gz

  nightly_release:
    name: Nightly Release
    needs: [ubuntu2204_build_test, windows_default]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: sycl_linux_default-2204
    - uses: actions/download-artifact@v3
      with:
        name: sycl_windows_default
    - name: Get current date
      if: github.event_name == 'schedule'
      run: echo "TAG=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"
    - name: Get current date + hash
      if: github.event_name != 'schedule'
      # TODO: Use date of the commit?
      run: echo "TAG=$(date +'%Y-%m-%d')-${GITHUB_SHA::7}" >> "$GITHUB_ENV"
    - name: Finalize tag
      id: tag
      run: echo "TAG=${{ env.TAG }}" >> "$GITHUB_OUTPUT"
    - run: |
        ls
        echo "DOING RELEASE nightly-${{ steps.tag.outputs.TAG }}"
        ls sycl_windows.tar.gz sycl_linux.tar.gz
    - name: Upload binaries to release
      if: ${{ !always() }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sycl_linux.tar.gz
          sycl_windows.tar.gz
        tag_name: nightly-${{ steps.tag.outputs.TAG }}
        prerelease: true
        body: "Nightly release ${{ steps.tag.outputs.TAG }}"

  ubuntu2204_docker_build_push:
    if: github.repository == 'intel/llvm' && !always()
    runs-on: ubuntu-22.04
    needs: ubuntu2204_build_test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: sycl_linux_default-2204
        path: devops/
    - name: Build and Push Container (with drivers)
      uses: ./devops/actions/build_container
      with:
        push: ${{ github.event_name != 'pull_request' }}
        file: ubuntu2204_preinstalled
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        build-args: |
          base_image=ghcr.io/intel/llvm/ubuntu2204_intel_drivers
          base_tag=latest
        tags: |
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:${{ github.sha }}
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:latest
    - name: Build and Push Container (no drivers)
      uses: ./devops/actions/build_container
      with:
        push: ${{ github.event_name != 'pull_request' }}
        file: ubuntu2204_preinstalled
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        build-args: |
          base_image=ghcr.io/intel/llvm/ubuntu2204_base
          base_tag=latest
        tags: |
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:no-drivers-${{ github.sha }}
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:no-drivers
    - name: Build and Push Container (Build image)
      uses: ./devops/actions/build_container
      with:
        push: ${{ github.event_name != 'pull_request' }}
        file: ubuntu2204_preinstalled
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        build-args: |
          base_image=ghcr.io/intel/llvm/ubuntu2204_build
          base_tag=latest
        tags: |
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:build-${{ github.sha }}
          ghcr.io/${{ github.repository }}/sycl_ubuntu2204_nightly:build
